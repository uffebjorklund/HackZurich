{
  "name": "xsockets.net",
  "version": "0.0.6",
  "description": "Basic TCP-client for communication between NodeJS and a XSockets.NET server",
  "main": "xsockets.net.js",
  "author": {
    "name": "codeplanner",
    "email": "uffe@xsockets.net"
  },
  "readme": "ï»¿# XSockets.NET 4 nodejs\r\n\r\nA basic client for full duplex communication between XSockets.NET and NodeJS\r\n\r\n\tvar xsockets = require('./xsockets.net');\r\n\r\n\tvar c = new xsockets.TcpClient('127.0.0.1', 4502, ['animal']);\r\n\tc.controller('animal').on('cat', function(d) {\r\n\t\tconsole.log('cat',d.says);\r\n\t});\r\n\r\n\r\n\tc.controller('animal').onopen = function(ci) {\r\n\t\tconsole.log('connected controller animal');    \r\n\t\tc.controller('animal').send('cat', {says:'mjau'});\r\n\t}\r\n\r\n\tc.onconnected = function(d) {\r\n\t\tconsole.log('connected', d);\r\n\t}\r\n\tc.open();\r\n    \r\n\r\nTo test without writing C# in XSockets you can replace 'animal' with 'generic'.\r\nIf you want to add a XSockets controller in the server just add the class below.\r\n\r\n    public class Animal : XSocketController\r\n    {\r\n        public override async Task OnMessage(IMessage message)\r\n        {\r\n            await this.InvokeToAll(message);\r\n        }\r\n    }",
  "readmeFilename": "README.md",
  "_id": "xsockets.net@0.0.6",
  "scripts": {},
  "_shasum": "4afeea0245a3842fabf1cc9f365e32a09ef48601",
  "_from": "xsockets.net@*"
}
